// Generated by CoffeeScript 1.6.1
(function() {
  var MoreDealsController;

  MoreDealsController = (function() {

    function MoreDealsController($scope, $rootScope, $http, dialog, $location) {
      $scope.allProducts = $rootScope.dodScope.allProducts;
      this.doCategories($rootScope, $scope);
      this.doBrands($rootScope, $scope);
      if ($rootScope.minMax == null) {
        $rootScope.minMax = PriceHelper.minMax($scope.allProducts);
        $scope.minMax = {};
      }
      $scope.minMax.min = $rootScope.minMax.min;
      $scope.minMax.max = $rootScope.minMax.max;
      console.log("MoreDealsController.ctor", $scope.minMax);
      $scope.toggle = function(category) {
        return console.log("TOGGLE", $scope.productCategories[category.name]);
      };
      $scope.toggleBrand = function(brand) {
        return console.log("TOGGLE", $scope.productBrands[brand.name]);
      };
      $scope.clearAll = function() {
        var categories, category, key, _results;
        categories = $scope.productCategories;
        _results = [];
        for (key in categories) {
          category = categories[key];
          _results.push(category.selected = false);
        }
        return _results;
      };
      $scope.saveDialog = function() {
        var brand, category, key, productFiltersHelper, selectedBrands, selectedCategories, _ref, _ref1;
        dialog.close();
        selectedCategories = [];
        _ref = $scope.productCategories;
        for (key in _ref) {
          category = _ref[key];
          if (category.selected) {
            selectedCategories.push(key);
          }
        }
        selectedBrands = [];
        _ref1 = $scope.productBrands;
        for (key in _ref1) {
          brand = _ref1[key];
          if (brand.selected) {
            selectedBrands.push(key);
          }
        }
        productFiltersHelper = new ProductFiltersHelper($rootScope.allProducts, selectedCategories, $scope.minMax, selectedBrands);
        return $rootScope.dodScope.allProducts = productFiltersHelper.filteredProducts;
      };
      $scope.closeDialog = function() {
        return dialog.close();
      };
    }

    MoreDealsController.prototype.doCategories = function($rootScope, $scope) {
      var productCategoriesHelper;
      productCategoriesHelper = new ProductCategoriesHelper($rootScope.allProducts);
      return $scope.productCategories = productCategoriesHelper.categories;
    };

    MoreDealsController.prototype.doBrands = function($rootScope, $scope) {
      var productBrandsHelper;
      productBrandsHelper = new ProductBrandsHelper($rootScope.allProducts);
      return $scope.productBrands = productBrandsHelper.brands;
    };

    MoreDealsController.resolve = {
      moreDODdata: function() {}
    };

    return MoreDealsController;

  })();

  window.MoreDealsController = MoreDealsController;

}).call(this);
